[
  {
    "id": 1,
    "name": "HTML",
    "description": "HTML 태그 및 구조를 이해하고 시멘틱 태그를 사용하여 웹 문서의 구조와 의미를 더 명확하게 전달할 수 있습니다."
  },
  {
    "id": 2,
    "name": "CSS",
    "description": "기본적인 스타일링, 선택자, 박스 모델, 레이아웃 등을 이해하고 있으며, 반응형 디자인도 구현할 수 있습니다."
  },
  {
    "id": 3,
    "name": "JavaScript",
    "description": "기본 문법과 데이터 타입을 이해하고, 변수, 함수, 조건문, 반복문을 다룰 수 있으며 자바스크립트의 작동 원리를 파악하고 있습니다."
  },
  {
    "id": 4,
    "name": "TypeScript",
    "description": "정적 타입 시스템을 활용하여 코드의 안정성을 높이고 인터페이스와 타입 정의를 할 수 있습니다."
  },
  {
    "id": 5,
    "name": "React",
    "description": "React 컴포넌트를 작성하고, 상태(state)와 속성(props)을 관리할 수 있습니다. 라우팅을 구현하고 상태 관리를 통해 컴포넌트 간 데이터를 공유하고 전달할 수 있습니다.. "
  },
  {
    "id": 6,
    "name": "Next.js",
    "description": "서버 사이드 렌더링(SSR)과 검색 엔진 최적화(SEO)와 관련된 개선 사항을 파악하고 적용할 수 있습니다."
  },
  {
    "id": 7,
    "name": "Vue.js",
    "description": "뷰의 라이프사이클을 이해하고, 필요한 상황에 맞게 라이플사이클 훅을 적용할 수 있습니다. 반응성 데이터 바인딩을 통해 데이터 변경을 실시간으로 반영할 수 있습니다."
  },
  {
    "id": 8,
    "name": "Nuxt",
    "description": "Nuxt를 통해 SPA 및 정적 웹사이트를 개발하고, 페이지 컴포넌트를 통해 페이지의 구조를 설계할 수 있습니다. 미들웨어를 사용하여 로그인 관련 로직을 처리한 경험이 있습니다."
  },
  {
    "id": 9,
    "name": "React Query",
    "description": "데이터를 효과적으로 관리하고 캐싱하는 데 사용되는 React Query를 활용하여 API를 조작하고 다룰 수 있습니다."
  },
  {
    "id": 10,
    "name": "Zustand",
    "description": "React 애플리케이션에서 상태 관리를 모듈화하고, 상태를 전역으로 관리할 수 있습니다."
  },
  {
    "id": 11,
    "name": "Pinia",
    "description": "vue 및 nuxt에서 상태 관리 라이브러리를 사용하여 상태 관련 로직을 분리하고, 상태를 전역으로 관리할 수 있습니다."
  },
  {
    "id": 12,
    "name": "Github",
    "description": "GitHub를 활용하여 팀 프로젝트의 코드 관리와 협업을 경험했으며, 풀 리퀘스트를 통한 코드 리뷰와 통합 프로세스에 참여한 경험이 있습니다."
  },
  {
    "id": 13,
    "name": "AWS(S3)",
    "description": "S3를 활용하여 파일 스토리지를 관리하고, 정적 파일을 호스팅한 경험이 있으며 백엔드와 배포 과정도 진행한 적이 있습니다."
  },
  {
    "id": 14,
    "name": "figma",
    "description": "사용자 인터페이스(UI) 및 사용자 경험(UX) 디자인을 생성, 편집, 공유할 수 있습니다."
  }
]
